# Fastfile for CopiChat

default_platform(:ios)

platform :ios do
  # 変数定義
  SCHEME = "copichat"
  WORKSPACE = "copichat.xcodeproj"

  # 共通の前処理
  before_all do
    # Xcodeのバージョン確認（必要に応じてコメントアウト）
    # ensure_xcode_version(version: "16.0")
  end

  # TestFlightにビルドをアップロード
  desc "TestFlightにビルドをアップロード"
  lane :beta do
    # App Store Connect API認証
    app_store_connect_api_key(
      key_id: "JMG6DSKMT5",
      issuer_id: "11f290de-18c4-4721-9813-228137cc6ae8",
      key_filepath: "./fastlane/AuthKey_JMG6DSKMT5.p8"
    )

    # ビルド番号を自動インクリメント
    increment_build_number(
      xcodeproj: WORKSPACE
    )

    # アーカイブを作成
    build_app(
      scheme: SCHEME,
      export_method: "app-store",
      output_directory: "./build",
      output_name: "CopiChat.ipa",
      export_options: {
        method: "app-store",
        teamID: "J99PJ8SUF2",
        signingStyle: "automatic",
        uploadBitcode: false,
        uploadSymbols: true
      }
    )

    # TestFlightにアップロード
    upload_to_testflight(
      skip_waiting_for_build_processing: true
    )

    UI.success("✅ TestFlightへのアップロードが完了しました！")
  end

  # App Storeに審査提出
  desc "App Storeに審査提出"
  lane :release do
    # App Store Connect API認証
    app_store_connect_api_key(
      key_id: "JMG6DSKMT5",
      issuer_id: "11f290de-18c4-4721-9813-228137cc6ae8",
      key_filepath: "./fastlane/AuthKey_JMG6DSKMT5.p8"
    )

    # マーケティングバージョンを更新（環境変数VERSION_NUMBERで指定可能）
    version = ENV["VERSION_NUMBER"]

    if version && !version.empty?
      increment_version_number(
        version_number: version,
        xcodeproj: WORKSPACE
      )
      UI.success("✅ バージョンを #{version} に更新しました")
    else
      UI.message("ℹ️  現在のバージョン（#{get_version_number(xcodeproj: WORKSPACE)}）を使用します")
    end

    # ビルド番号を自動インクリメント
    increment_build_number(
      xcodeproj: WORKSPACE
    )

    # プロビジョニングプロファイルを取得
    sigh(
      app_identifier: "com.universalpine.copichat",
      adhoc: false,
      readonly: false,
      filename: "CopiChat_App_Store.mobileprovision"
    )

    # アーカイブを作成
    build_app(
      scheme: SCHEME,
      export_method: "app-store",
      output_directory: "./build",
      output_name: "CopiChat.ipa",
      export_options: {
        method: "app-store",
        teamID: "J99PJ8SUF2",
        signingStyle: "automatic",
        uploadBitcode: false,
        uploadSymbols: true
      }
    )

    # App Store Connectにアップロード
    upload_to_app_store(
      skip_metadata: true,
      skip_screenshots: true,
      submit_for_review: false,  # アップロードのみ。App Store Connectから手動で審査提出
      automatic_release: false,
      force: true  # 既存のビルドを上書き
    )

    UI.success("✅ App Store Connectへのアップロードが完了しました！")
    UI.success("📱 App Store Connect (https://appstoreconnect.apple.com) から審査に提出してください")
  end

  # バージョン番号をインクリメント（マイナーバージョン）
  desc "バージョン番号をインクリメント"
  lane :bump_version do
    version = increment_version_number(
      bump_type: "patch", # major, minor, patch
      xcodeproj: WORKSPACE
    )

    increment_build_number(
      xcodeproj: WORKSPACE
    )

    UI.success("✅ バージョンを #{version} に更新しました")
  end

  # クリーンビルド
  desc "プロジェクトをクリーン"
  lane :clean do
    clean_build_artifacts
    clear_derived_data
    UI.success("🧹 クリーン完了")
  end

  # エラー時の処理
  error do |lane, exception|
    UI.error("❌ エラーが発生しました: #{exception.message}")
  end
end
